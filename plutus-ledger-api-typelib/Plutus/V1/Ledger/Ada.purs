-- File auto generated by purescript-bridge! --
module Plutus.V1.Ledger.Ada where

import Prelude

import ConstrIndices (class HasConstrIndices, fromConstr2Index)
import Data.BigInt (BigInt)
import Data.Generic.Rep (class Generic)
import Data.Lens (Iso', Lens', Prism', iso, prism')
import Data.Lens.Iso.Newtype (_Newtype)
import Data.Lens.Record (prop)
import Data.Maybe (Maybe(Nothing, Just))
import Data.Newtype (class Newtype)
import Data.Show.Generic (genericShow)
import Data.Tuple (Tuple(Tuple))
import FromData (class FromData, genericFromData)
import ToData (class ToData, genericToData)
import Type.Proxy (Proxy(Proxy))

newtype Ada = Lovelace { getLovelace :: BigInt }

instance Show Ada where
  show a = genericShow a

derive instance Generic Ada _

derive instance Newtype Ada _

instance HasConstrIndices Ada where
  constrIndices _ = fromConstr2Index [Tuple "Lovelace" 0]

instance ToData Ada where
  toData x = genericToData x

instance FromData Ada where
  fromData pd = genericFromData pd

--------------------------------------------------------------------------------

_Lovelace :: Iso' Ada {getLovelace :: BigInt}
_Lovelace = _Newtype
