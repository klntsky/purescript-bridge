-- File auto generated by purescript-bridge! --
module Plutus.V1.Ledger.Bytes where

import Prelude

import ConstrIndices (class HasConstrIndices, fromConstr2Index)
import Control.Lazy (defer)
import Data.Argonaut.Core (jsonNull)
import Data.Argonaut.Decode (class DecodeJson, decodeJson)
import Data.Argonaut.Decode.Aeson ((</$\>), (</*\>), (</\>), decode, null)
import Data.Argonaut.Encode (class EncodeJson, encodeJson)
import Data.Argonaut.Encode.Aeson ((>$<), (>/\<), encode, null)
import Data.Generic.Rep (class Generic)
import Data.Lens (Iso', Lens', Prism', iso, prism')
import Data.Lens.Iso.Newtype (_Newtype)
import Data.Lens.Record (prop)
import Data.Maybe (Maybe(Nothing, Just))
import Data.Newtype (class Newtype, unwrap)
import Data.Show.Generic (genericShow)
import Data.Tuple (Tuple(Tuple))
import Data.Tuple.Nested ((/\))
import FromData (class FromData, genericFromData)
import ToData (class ToData, genericToData)
import Type.Proxy (Proxy(Proxy))
import Types.ByteArray (ByteArray)
import Data.Argonaut.Decode.Aeson as D
import Data.Argonaut.Encode.Aeson as E
import Data.Map as Map

newtype LedgerBytes = LedgerBytes { getLedgerBytes :: ByteArray }

instance Show LedgerBytes where
  show a = genericShow a

derive instance Generic LedgerBytes _

derive instance Newtype LedgerBytes _

instance HasConstrIndices LedgerBytes where
  constrIndices _ = fromConstr2Index [Tuple "LedgerBytes" 0]

instance ToData LedgerBytes where
  toData x = genericToData x

instance FromData LedgerBytes where
  fromData pd = genericFromData pd

instance EncodeJson LedgerBytes where
  encodeJson = defer \_ -> E.encode $ unwrap >$< (E.record
                                                 { getLedgerBytes: E.value :: _ ByteArray })

instance DecodeJson LedgerBytes where
  decodeJson = defer \_ -> D.decode $ (LedgerBytes <$> D.record "LedgerBytes" { getLedgerBytes: D.value :: _ ByteArray })

--------------------------------------------------------------------------------

_LedgerBytes :: Iso' LedgerBytes {getLedgerBytes :: ByteArray}
_LedgerBytes = _Newtype
