-- File auto generated by purescript-bridge! --
module Plutus.V1.Ledger.Tx where

import Prelude

import ConstrIndices (class HasConstrIndices, constrIndices, fromConstr2Index)
import Data.BigInt (BigInt)
import Data.Generic.Rep (class Generic)
import Data.Lens (Iso', Lens', Prism', iso, prism')
import Data.Lens.Iso.Newtype (_Newtype)
import Data.Lens.Record (prop)
import Data.Maybe (Maybe, Maybe(Nothing, Just))
import Data.Tuple (Tuple(Tuple))
import FromData (class FromData, fromData, genericFromData)
import Plutus.V1.Ledger.Address (Address)
import Plutus.V1.Ledger.Scripts (DatumHash)
import Plutus.V1.Ledger.TxId (TxId)
import Plutus.V1.Ledger.Value (Value)
import ToData (class ToData, genericToData, toData)
import Type.Proxy (Proxy(Proxy))

data TxOut = TxOut Address Value (Maybe DatumHash)

derive instance Generic TxOut _

instance HasConstrIndices TxOut where
  constrIndices _ = fromConstr2Index [ Tuple "TxOut" 0 ]

instance ToData TxOut where
  toData x = genericToData x

instance FromData TxOut where
  fromData pd = genericFromData pd

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------

data TxOutRef = TxOutRef TxId BigInt

derive instance Generic TxOutRef _

instance HasConstrIndices TxOutRef where
  constrIndices _ = fromConstr2Index [ Tuple "TxOutRef" 0 ]

instance ToData TxOutRef where
  toData x = genericToData x

instance FromData TxOutRef where
  fromData pd = genericFromData pd

--------------------------------------------------------------------------------

