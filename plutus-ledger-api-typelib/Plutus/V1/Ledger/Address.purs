-- File auto generated by purescript-bridge! --
module Plutus.V1.Ledger.Address where

import Prelude

import ConstrIndices (class HasConstrIndices, constrIndices, fromConstr2Index)
import Data.Generic.Rep (class Generic)
import Data.Lens (Iso', Lens', Prism', iso, prism')
import Data.Lens.Iso.Newtype (_Newtype)
import Data.Lens.Record (prop)
import Data.Maybe (Maybe, Maybe(Nothing, Just))
import Data.Tuple (Tuple(Tuple))
import FromData (class FromData, fromData, genericFromData)
import Plutus.V1.Ledger.Credential (Credential, StakingCredential)
import ToData (class ToData, genericToData, toData)
import Type.Proxy (Proxy(Proxy))

data Address = Address Credential (Maybe StakingCredential)

derive instance Generic Address _

instance HasConstrIndices Address where
  constrIndices _ = fromConstr2Index [ Tuple "Address" 0 ]

instance ToData Address where
  toData x = genericToData x

instance FromData Address where
  fromData pd = genericFromData pd

--------------------------------------------------------------------------------

