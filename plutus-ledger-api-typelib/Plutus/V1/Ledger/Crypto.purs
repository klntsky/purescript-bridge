-- File auto generated by purescript-bridge! --
module Plutus.V1.Ledger.Crypto where

import Prelude

import ConstrIndices (class HasConstrIndices, constrIndices, fromConstr2Index)
import Data.Generic.Rep (class Generic)
import Data.Lens (Iso', Lens', Prism', iso, prism')
import Data.Lens.Iso.Newtype (_Newtype)
import Data.Lens.Record (prop)
import Data.Maybe (Maybe(Nothing, Just))
import Data.Newtype (class Newtype)
import Data.Tuple (Tuple(Tuple))
import FromData (class FromData, fromData, genericFromData)
import Plutus.V1.Ledger.Bytes (LedgerBytes)
import ToData (class ToData, genericToData, toData)
import Type.Proxy (Proxy(Proxy))
import Types.ByteArray (ByteArray)

newtype PubKey = PubKey LedgerBytes

derive instance Generic PubKey _

derive instance Newtype PubKey _

instance HasConstrIndices PubKey where
  constrIndices _ = fromConstr2Index [ Tuple "PubKey" 0 ]

derive newtype instance ToData PubKey

derive newtype instance FromData PubKey

--------------------------------------------------------------------------------

_PubKey :: Iso' PubKey LedgerBytes
_PubKey = _Newtype

--------------------------------------------------------------------------------

newtype PubKeyHash = PubKeyHash ByteArray

derive instance Generic PubKeyHash _

derive instance Newtype PubKeyHash _

instance HasConstrIndices PubKeyHash where
  constrIndices _ = fromConstr2Index [ Tuple "PubKeyHash" 0 ]

derive newtype instance ToData PubKeyHash

derive newtype instance FromData PubKeyHash

--------------------------------------------------------------------------------

_PubKeyHash :: Iso' PubKeyHash ByteArray
_PubKeyHash = _Newtype

--------------------------------------------------------------------------------

newtype PrivateKey = PrivateKey LedgerBytes

derive instance Generic PrivateKey _

derive instance Newtype PrivateKey _

instance HasConstrIndices PrivateKey where
  constrIndices _ = fromConstr2Index [ Tuple "PrivateKey" 0 ]

derive newtype instance ToData PrivateKey

derive newtype instance FromData PrivateKey

--------------------------------------------------------------------------------

_PrivateKey :: Iso' PrivateKey LedgerBytes
_PrivateKey = _Newtype

--------------------------------------------------------------------------------

newtype Signature = Signature ByteArray

derive instance Generic Signature _

derive instance Newtype Signature _

instance HasConstrIndices Signature where
  constrIndices _ = fromConstr2Index [ Tuple "Signature" 0 ]

derive newtype instance ToData Signature

derive newtype instance FromData Signature

--------------------------------------------------------------------------------

_Signature :: Iso' Signature ByteArray
_Signature = _Newtype
